<div class="bg-white">
  <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">
    <div class="mx-auto max-w-2xl">
      <h1 class="text-2xl font-bold tracking-tight text-gray-900">Pay Bidding Fee</h1>
      <p class="mt-2 text-sm text-gray-600">To participate in auctions, a one-time bidding fee of RM <%= SeaBid::BIDDING_FEE %> is required.</p>

      <div class="mt-8">
        <div class="space-y-12">
          <div class="border-b border-gray-900/10 pb-12">
            <%= form_tag bidding_fees_path, id: 'payment-form', class: "mt-10", data: { turbo: false } do %>
              <div class="mt-10">
                <div id="card-element" class="mt-2 p-3 border rounded-md">
                  <!-- A Stripe Element will be inserted here. -->
                </div>
                <!-- Used to display form errors. -->
                <div id="card-errors" role="alert" class="mt-2 text-sm text-red-600"></div>
              </div>

              <%= hidden_field_tag 'stripe_token', '', id: 'stripe_token' %>

              <div class="mt-6 flex items-center justify-end gap-x-6">
                <%= link_to "Cancel", plate_numbers_path, class: "text-sm font-semibold leading-6 text-gray-900" %>
                <%= submit_tag "Pay RM #{SeaBid::BIDDING_FEE}", class: "rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600", data: { disable_with: 'Processing...' } %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% content_for :head do %>
  <script src="https://js.stripe.com/v3/"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Create a Stripe client.
      var stripe = Stripe('<%= Rails.configuration.stripe[:publishable_key] %>');

      // Create an instance of Elements.
      var elements = stripe.elements();

      // Custom styling can be passed to options when creating an Element.
      var style = {
        base: {
          color: '#32325d',
          fontFamily: '"Inter", Helvetica, sans-serif',
          fontSmoothing: 'antialiased',
          fontSize: '16px',
          '::placeholder': {
            color: '#aab7c4'
          }
        },
        invalid: {
          color: '#fa755a',
          iconColor: '#fa755a'
        }
      };

      // Create an instance of the card Element.
      var card = elements.create('card', {style: style});

      // Add an instance of the card Element into the `card-element` <div>.
      card.mount('#card-element');

      // Handle real-time validation errors from the card Element.
      card.addEventListener('change', function(event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
          displayError.textContent = event.error.message;
        } else {
          displayError.textContent = '';
        }
      });

      // Handle form submission.
      var form = document.getElementById('payment-form');
      var submitButton = form.querySelector('input[type="submit"]');
      var submitted = false;

      form.addEventListener('submit', function(event) {
        event.preventDefault();

        if (submitted) return;

        // Clear any previous errors
        var errorElement = document.getElementById('card-errors');
        errorElement.textContent = '';

        submitButton.disabled = true;
        submitButton.value = 'Processing...';

        stripe.createToken(card).then(function(result) {
          if (result.error) {
            submitted = false;
            submitButton.disabled = false;
            submitButton.value = 'Pay RM <%= SeaBid::BIDDING_FEE %>';
            errorElement.textContent = result.error.message;
          } else {
            // Debug log
            console.log('Token created:', result.token.id);
            
            // Set the token value
            var tokenInput = document.getElementById('stripe_token');
            tokenInput.value = result.token.id;
            
            // Debug log the form data
            var formData = new FormData(form);
            console.log('Form data:');
            for (var pair of formData.entries()) {
              console.log(pair[0] + ': ' + pair[1]);
            }
            
            // Submit the form
            submitted = true;
            form.submit();
          }
        }).catch(function(error) {
          submitted = false;
          submitButton.disabled = false;
          submitButton.value = 'Pay RM <%= SeaBid::BIDDING_FEE %>';
          errorElement.textContent = error.message || 'An error occurred while processing your payment.';
          console.error('Stripe error:', error);
        });
      });
    });
  </script>
<% end %> 